<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class FuriousFeatures {
	private $furious_features_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'furious_features_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'furious_features_page_init' ) );
	}

	public function furious_features_add_plugin_page() {
		add_menu_page(
			'Furious Features', // page_title
			'Furious Features', // menu_title
			'manage_options', // capability
			'furious-features', // menu_slug
			array( $this, 'furious_features_create_admin_page' ), // function
			'dashicons-lightbulb', // icon_url
			3 // position
		);
	}

	public function furious_features_create_admin_page() {
		$this->furious_features_options = get_option( 'furious_features_option_name' ); ?>

		<div class="wrap">
			<h2>Furious Features</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'furious_features_option_group' );
					do_settings_sections( 'furious-features-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function furious_features_page_init() {
		register_setting(
			'furious_features_option_group', // option_group
			'furious_features_option_name', // option_name
			array( $this, 'furious_features_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'furious_features_setting_section', // id
			'Settings', // title
			array( $this, 'furious_features_section_info' ), // callback
			'furious-features-admin' // page
		);

		add_settings_field(
			'cleanup_wordpress_crud_0', // id
			'Cleanup WordPress Crud', // title
			array( $this, 'cleanup_wordpress_crud_0_callback' ), // callback
			'furious-features-admin', // page
			'furious_features_setting_section' // section
		);

		add_settings_field(
			'enable_jquery_override_to_latest_version_1', // id
			'Enable jQuery override to latest version', // title
			array( $this, 'enable_jquery_override_to_latest_version_1_callback' ), // callback
			'furious-features-admin', // page
			'furious_features_setting_section' // section
		);

		add_settings_field(
			'show_search_results_under_the_search_slug_2', // id
			'Show search results under the \"/search\" slug', // title
			array( $this, 'show_search_results_under_the_search_slug_2_callback' ), // callback
			'furious-features-admin', // page
			'furious_features_setting_section' // section
		);

		add_settings_field(
			'replace_read_more_text_3', // id
			'Replace \"Read more...\" text', // title
			array( $this, 'replace_read_more_text_3_callback' ), // callback
			'furious-features-admin', // page
			'furious_features_setting_section' // section
		);

		add_settings_field(
			'custom_read_more_text_4', // id
			'Custom \"Read more...\" text', // title
			array( $this, 'custom_read_more_text_4_callback' ), // callback
			'furious-features-admin', // page
			'furious_features_setting_section' // section
		);

		add_settings_field(
			'remove_hard_coded_width_on_attachment_containers_5', // id
			'Remove hard-coded width on attachment containers', // title
			array( $this, 'remove_hard_coded_width_on_attachment_containers_5_callback' ), // callback
			'furious-features-admin', // page
			'furious_features_setting_section' // section
		);
	}

	public function furious_features_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['cleanup_wordpress_crud_0'] ) ) {
			$sanitary_values['cleanup_wordpress_crud_0'] = $input['cleanup_wordpress_crud_0'];
		}

		if ( isset( $input['enable_jquery_override_to_latest_version_1'] ) ) {
			$sanitary_values['enable_jquery_override_to_latest_version_1'] = $input['enable_jquery_override_to_latest_version_1'];
		}

		if ( isset( $input['show_search_results_under_the_search_slug_2'] ) ) {
			$sanitary_values['show_search_results_under_the_search_slug_2'] = $input['show_search_results_under_the_search_slug_2'];
		}

		if ( isset( $input['replace_read_more_text_3'] ) ) {
			$sanitary_values['replace_read_more_text_3'] = $input['replace_read_more_text_3'];
		}

		if ( isset( $input['custom_read_more_text_4'] ) ) {
			$sanitary_values['custom_read_more_text_4'] = sanitize_text_field( $input['custom_read_more_text_4'] );
		}

		if ( isset( $input['remove_hard_coded_width_on_attachment_containers_5'] ) ) {
			$sanitary_values['remove_hard_coded_width_on_attachment_containers_5'] = $input['remove_hard_coded_width_on_attachment_containers_5'];
		}

		return $sanitary_values;
	}

	public function furious_features_section_info() {
		
	}

	public function cleanup_wordpress_crud_0_callback() {
		printf(
			'<input type="checkbox" name="furious_features_option_name[cleanup_wordpress_crud_0]" id="cleanup_wordpress_crud_0" value="cleanup_wordpress_crud_0" %s> <label for="cleanup_wordpress_crud_0">This option removes some unnecessary things from the wp_head() function</label>',
			( isset( $this->furious_features_options['cleanup_wordpress_crud_0'] ) && $this->furious_features_options['cleanup_wordpress_crud_0'] === 'cleanup_wordpress_crud_0' ) ? 'checked' : ''
		);
	}

	public function enable_jquery_override_to_latest_version_1_callback() {
		printf(
			'<input type="checkbox" name="furious_features_option_name[enable_jquery_override_to_latest_version_1]" id="enable_jquery_override_to_latest_version_1" value="enable_jquery_override_to_latest_version_1" %s> <label for="enable_jquery_override_to_latest_version_1">Enable this option to unload the default version of jQuery included in WordPress and replace it with the latest version.</label>',
			( isset( $this->furious_features_options['enable_jquery_override_to_latest_version_1'] ) && $this->furious_features_options['enable_jquery_override_to_latest_version_1'] === 'enable_jquery_override_to_latest_version_1' ) ? 'checked' : ''
		);
	}

	public function show_search_results_under_the_search_slug_2_callback() {
		printf(
			'<input type="checkbox" name="furious_features_option_name[show_search_results_under_the_search_slug_2]" id="show_search_results_under_the_search_slug_2" value="show_search_results_under_the_search_slug_2" %s> <label for="show_search_results_under_the_search_slug_2">This option rewrites the search results page to look like "sitename.com/search/search+query"</label>',
			( isset( $this->furious_features_options['show_search_results_under_the_search_slug_2'] ) && $this->furious_features_options['show_search_results_under_the_search_slug_2'] === 'show_search_results_under_the_search_slug_2' ) ? 'checked' : ''
		);
	}

	public function replace_read_more_text_3_callback() {
		printf(
			'<input type="checkbox" name="furious_features_option_name[replace_read_more_text_3]" id="replace_read_more_text_3" value="replace_read_more_text_3" %s> <label for="replace_read_more_text_3">Enable this option to replace the "Read more..." at the end of excerpts with the custom text you provide below</label>',
			( isset( $this->furious_features_options['replace_read_more_text_3'] ) && $this->furious_features_options['replace_read_more_text_3'] === 'replace_read_more_text_3' ) ? 'checked' : ''
		);
	}

	public function custom_read_more_text_4_callback() {
		printf(
			'<input class="regular-text" type="text" name="furious_features_option_name[custom_read_more_text_4]" id="custom_read_more_text_4" value="%s" placeholder="We typically use &hellip;">',
			isset( $this->furious_features_options['custom_read_more_text_4'] ) ? esc_attr( $this->furious_features_options['custom_read_more_text_4']) : ''
		);
	}

	public function remove_hard_coded_width_on_attachment_containers_5_callback() {
		printf(
			'<input type="checkbox" name="furious_features_option_name[remove_hard_coded_width_on_attachment_containers_5]" id="remove_hard_coded_width_on_attachment_containers_5" value="remove_hard_coded_width_on_attachment_containers_5" %s> <label for="remove_hard_coded_width_on_attachment_containers_5">For images and other blocks added in the editor, WordPress automatically sets a fixed-with value on the item in the DOM. This will remove that value</label>',
			( isset( $this->furious_features_options['remove_hard_coded_width_on_attachment_containers_5'] ) && $this->furious_features_options['remove_hard_coded_width_on_attachment_containers_5'] === 'remove_hard_coded_width_on_attachment_containers_5' ) ? 'checked' : ''
		);
	}

}
if ( is_admin() )
	$furious_features = new FuriousFeatures();

/* 
 * Retrieve this value with:
 * $furious_features_options = get_option( 'furious_features_option_name' ); // Array of All Options
 * $cleanup_wordpress_crud_0 = $furious_features_options['cleanup_wordpress_crud_0']; // Cleanup WordPress Crud
 * $enable_jquery_override_to_latest_version_1 = $furious_features_options['enable_jquery_override_to_latest_version_1']; // Enable jQuery override to latest version
 * $show_search_results_under_the_search_slug_2 = $furious_features_options['show_search_results_under_the_search_slug_2']; // Show search results under the \"/search\" slug
 * $replace_read_more_text_3 = $furious_features_options['replace_read_more_text_3']; // Replace \"Read more...\" text
 * $custom_read_more_text_4 = $furious_features_options['custom_read_more_text_4']; // Custom \"Read more...\" text
 * $remove_hard_coded_width_on_attachment_containers_5 = $furious_features_options['remove_hard_coded_width_on_attachment_containers_5']; // Remove hard-coded width on attachment containers
 */

?>